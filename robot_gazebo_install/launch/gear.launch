<?xml version="1.0"?>
<launch>
  <arg name="competition_mode" value="$(optenv ARIAC_COMPETITION false)" />

  <!-- run a relay to make joint_states available on ariac/joint_states -->
  <node name="relay_joint_states" pkg="topic_tools" type="relay"
        args="/joint_states /ariac/joint_states" required="true" output="log" />

  <remap from="joint_states" to="ariac/joint_states" />

  <arg name="limited" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="world_path" default="$(find robot_gazebo_install)/launch/gear.world"/>
  <arg name="gear_urdf_xacro" default="$(find robot_gazebo_install)/launch/gear.urdf.xacro" />
  <arg name="state_log_dir" value="$(env HOME)/.ariac/log/gazebo" />

  <!-- run startup script -->
  <node name="startup_ariac" pkg="osrf_gear" type="startup.sh" output="screen" />

  <arg unless="$(arg competition_mode)" name="enable_gz_ros_network" value="true"/>
  <arg     if="$(arg competition_mode)" name="enable_gz_ros_network" value="false"/>
  <!-- startup simulated world -->
  <include file="$(find osrf_gear)/launch/empty_world.launch">
    <arg name="world_name" default="$(arg world_path)"/>
    <!-- Always start paused because the arm spawn needs it that way. -->
    <arg name="paused" value="true"/>
    <arg name="enable_ros_network" value="$(arg enable_gz_ros_network)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="extra_gazebo_args" value="" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="verbose" value="$(arg verbose)" />
  </include>

  <!-- load the URDF (it will include the robot arm model) -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py '$(arg gear_urdf_xacro)' use_effort_interface:=true" />



</launch>
